# 场景5：边界条件测试
# 目标：测试序列号匹配和载荷处理的边界情况

metadata:
  name: "边界条件测试"
  description: "测试序列号边界匹配、保留范围边界和特殊载荷长度的处理"
  expected_modified_packets: 3
  expected_masked_bytes: 1753  # (517-10) + (1342-0) + (205-5) = 507 + 1342 + 200
  expected_kept_bytes: 15      # 10 + 0 + 5
  test_type: "boundary_conditions"

keep_range_rules:
  # 边界测试1：保留范围等于载荷长度（包4 - 扩展保留）
  - stream_id: "TCP_10.171.250.80:33492_10.50.50.161:443_forward"
    sequence_start: 2422049782
    sequence_end: 2422050299
    keep_ranges:
      - [0, 10]  # 扩展保留范围：TLS记录头 + 握手消息头
    protocol_hint: "TLS"
  
  # 边界测试2：无保留范围（包6 - 完全掩码）
  - stream_id: "TCP_10.171.250.80:33492_10.50.50.161:443_reverse"
    sequence_start: 3913402951
    sequence_end: 3913404293
    keep_ranges: []  # 无保留范围，完全掩码
    protocol_hint: "TLS"
  
  # 边界测试3：序列号精确边界（包14 - 精确匹配）
  - stream_id: "TCP_10.171.250.80:33492_10.50.50.161:443_forward"
    sequence_start: 2422050425  # 精确起始序列号
    sequence_end: 2422050630    # 精确结束序列号
    keep_ranges:
      - [0, 5]   # 标准TLS记录头保留
    protocol_hint: "TLS"

verification:
  target_packets: [4, 6, 14]
  unchanged_packets: [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22]
  
  boundary_specific_checks:
    extended_keep_range:
      packet_4:
        bytes_0_to_9: "unchanged"   # 前10字节保留
        bytes_10_to_516: "masked"   # 后507字节掩码
        test_reason: "验证扩展保留范围处理"
    
    no_keep_range:
      packet_6:
        bytes_0_to_1341: "masked"   # 全部1342字节掩码
        test_reason: "验证空保留范围（完全掩码）处理"
    
    exact_sequence_match:
      packet_14:
        sequence_start: 2422050425
        sequence_end: 2422050630
        bytes_0_to_4: "unchanged"   # TLS记录头保留
        bytes_5_to_204: "masked"    # 应用数据掩码
        test_reason: "验证精确序列号边界匹配"
  
  edge_case_validation:
    sequence_boundary_precision: true
    keep_range_boundary_handling: true
    zero_keep_range_support: true
    extended_keep_range_support: true

critical_test:
  importance: "HIGH"
  reason: "边界条件是掩码器健壮性的关键指标，确保在各种边界情况下都能正确处理" 
