<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="65" skipped="5" tests="580" time="5.894" timestamp="2025-07-03T15:24:40.214263+08:00" hostname="Rickys-MacBook-Air.local"><testcase classname="" name="tests.unit.test_performance_centralized" time="0.000"><skipped message="collection skipped">('/Users/ricky/Downloads/PktMask/tests/unit/test_performance_centralized.py', 26, "Skipped: 无法导入模块: cannot import name '_process_pcap_data_enhanced' from 'src.pktmask.core.processors' (/Users/ricky/Downloads/PktMask/src/pktmask/core/processors/__init__.py)")</skipped></testcase><testcase classname="tests.unit.test_config.TestAppConfig" name="test_default_initialization" time="0.001" /><testcase classname="tests.unit.test_config.TestAppConfig" name="test_config_attributes" time="0.000" /><testcase classname="tests.unit.test_config.TestAppConfig" name="test_config_can_be_modified" time="0.000" /><testcase classname="tests.unit.test_config.TestAppConfig" name="test_config_validation" time="0.000" /><testcase classname="tests.unit.test_config.TestUISettings" name="test_ui_defaults" time="0.000" /><testcase classname="tests.unit.test_config.TestUISettings" name="test_ui_modifications" time="0.000" /><testcase classname="tests.unit.test_config.TestProcessingSettings" name="test_processing_defaults" time="0.000" /><testcase classname="tests.unit.test_config.TestProcessingSettings" name="test_processing_modifications" time="0.000" /><testcase classname="tests.unit.test_config.TestLoggingSettings" name="test_logging_defaults" time="0.000" /><testcase classname="tests.unit.test_config.TestLoggingSettings" name="test_logging_modifications" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationIntegration" name="test_config_save_and_load" time="0.011" /><testcase classname="tests.unit.test_config.TestConfigurationIntegration" name="test_config_default_path" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationIntegration" name="test_config_with_nonexistent_file" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationIntegration" name="test_config_helper_methods" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationEdgeCases" name="test_invalid_config_data" time="0.001" /><testcase classname="tests.unit.test_config.TestConfigurationEdgeCases" name="test_partial_config_data" time="0.001" /><testcase classname="tests.unit.test_config.TestConfigurationEdgeCases" name="test_config_update_directories" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationDefaults" name="test_default_values_are_reasonable" time="0.000" /><testcase classname="tests.unit.test_config.TestConfigurationDefaults" name="test_configs_are_consistent" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_event_adapter_initialization" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_from_legacy_dict_basic" time="0.000"><skipped type="pytest.skip" message="Legacy format conversion tests require complex data model setup - feature works but tests need refinement">/Users/ricky/Downloads/PktMask/tests/unit/test_domain_adapters_comprehensive.py:31: Legacy format conversion tests require complex data model setup - feature works but tests need refinement</skipped></testcase><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_to_legacy_dict_basic" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_preprocess_legacy_data_log" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_create_enhanced_event" time="0.000"><skipped type="pytest.skip" message="Enhanced event creation requires complex data model setup - feature works but tests need refinement">/Users/ricky/Downloads/PktMask/tests/unit/test_domain_adapters_comprehensive.py:66: Enhanced event creation requires complex data model setup - feature works but tests need refinement</skipped></testcase><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestEventDataAdapter" name="test_is_legacy_format" time="0.000"><skipped type="pytest.skip" message="Legacy format detection requires complex data model setup - feature works but tests need refinement">/Users/ricky/Downloads/PktMask/tests/unit/test_domain_adapters_comprehensive.py:70: Legacy format detection requires complex data model setup - feature works but tests need refinement</skipped></testcase><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestStatisticsDataAdapter" name="test_statistics_adapter_initialization" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestStatisticsDataAdapter" name="test_to_legacy_dict_basic" time="0.001" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestStatisticsDataAdapter" name="test_merge_statistics_basic" time="0.001" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestStatisticsDataAdapter" name="test_create_dashboard_update" time="0.001" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestStatisticsDataAdapter" name="test_validate_statistics_data" time="0.001" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDataModels" name="test_pipeline_event_data_exists" time="0.001" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDataModels" name="test_statistics_data_exists" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDataModels" name="test_pipeline_events_enum" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDomainAdaptersIntegration" name="test_adapters_can_be_instantiated" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDomainAdaptersIntegration" name="test_adapters_have_expected_methods" time="0.000" /><testcase classname="tests.unit.test_domain_adapters_comprehensive.TestDomainAdaptersIntegration" name="test_error_handling_in_adapters" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationTypes" name="test_encapsulation_type_enum" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_detector_initialization" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_detect_plain_packet" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_detect_vlan_packet" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_is_encapsulated" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_get_encapsulation_depth" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_get_supported_encapsulations" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationDetector" name="test_cache_functionality" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProtocolStackParser" name="test_parser_initialization" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestProtocolStackParser" name="test_parse_plain_packet_layers" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProtocolStackParser" name="test_parse_vlan_packet_layers" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProtocolStackParser" name="test_extract_all_ip_addresses" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProtocolStackParser" name="test_find_innermost_payload" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_adapter_initialization" time="0.000" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_analyze_packet_for_ip_processing" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_analyze_packet_for_payload_processing" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_extract_ips_for_anonymization" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_is_packet_encapsulated" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_get_encapsulation_summary" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_get_processing_stats" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestProcessingAdapter" name="test_reset_stats" time="0.001" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationIntegration" name="test_end_to_end_plain_packet" time="0.002" /><testcase classname="tests.unit.test_encapsulation_basic.TestEncapsulationIntegration" name="test_end_to_end_vlan_packet" time="0.002" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_strategy_initialization_with_encapsulation_support" time="0.000" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_reset_with_encapsulation_stats" time="0.000" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_prescan_plain_packets" time="0.014" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_prescan_vlan_packets" time="0.007" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_prescan_mixed_packets" time="0.006" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_create_mapping_with_encapsulation_stats" time="0.007" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_anonymize_plain_packet" time="0.001" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_anonymize_vlan_packet" time="0.001" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_anonymize_packet_not_in_mapping" time="0.001" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEnhancedIPAnonymization" name="test_anonymize_packet_no_mapping" time="0.001" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEncapsulationStatistics" name="test_encapsulation_stats_initialization" time="0.001" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEncapsulationStatistics" name="test_stats_collection_during_prescan" time="0.006" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEncapsulationIntegration" name="test_end_to_end_vlan_processing" time="0.006" /><testcase classname="tests.unit.test_enhanced_ip_anonymization.TestEncapsulationIntegration" name="test_mixed_encapsulation_processing" time="0.007" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_initialization_enhanced_mode_default" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_initialization_explicit_enhanced_mode" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_initialization_basic_mode" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_enhanced_mode_initialization_success" time="0.002" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_enhanced_mode_initialization_import_failure_fallback" time="0.001" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_basic_mode_initialization_with_recipe" time="0.001" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_stage_config_creation_tshark" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_stage_config_creation_pyshark" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_stage_config_creation_scapy" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_process_file_enhanced_mode_success" time="0.002"><failure message="assert 0 == 100&#10; +  where 0 = StageStats(stage_name='MaskStage', packets_processed=0, packets_modified=0, duration_ms=0.4439353942871094, extra_metrics={'enhanced_mode': False, 'processor_adapter_mode': False, 'mode': 'fallback', 'original_mode': 'enhanced_or_processor_adapter', 'fallback_reason': &quot;2 validation errors for StageStats\npackets_processed\n  Input should be a valid integer [type=int_type, input_value=&lt;Mock name='mock.execute_....get()' id='5205818544'&gt;, input_type=Mock]\n    For further information visit https://errors.pydantic.dev/2.11/v/int_type\npackets_modified\n  Input should be a valid integer [type=int_type, input_value=&lt;Mock name='mock.execute_....get()' id='5205818544'&gt;, input_type=Mock]\n    For further information visit https://errors.pydantic.dev/2.11/v/int_type&quot;, 'graceful_degradation': True}).packets_processed">tests/unit/test_enhanced_mask_stage.py:175: in test_process_file_enhanced_mode_success
    assert result.packets_processed == 100
E   assert 0 == 100
E    +  where 0 = StageStats(stage_name='MaskStage', packets_processed=0, packets_modified=0, duration_ms=0.4439353942871094, extra_metrics={'enhanced_mode': False, 'processor_adapter_mode': False, 'mode': 'fallback', 'original_mode': 'enhanced_or_processor_adapter', 'fallback_reason': "2 validation errors for StageStats\npackets_processed\n  Input should be a valid integer [type=int_type, input_value=&lt;Mock name='mock.execute_....get()' id='5205818544'&gt;, input_type=Mock]\n    For further information visit https://errors.pydantic.dev/2.11/v/int_type\npackets_modified\n  Input should be a valid integer [type=int_type, input_value=&lt;Mock name='mock.execute_....get()' id='5205818544'&gt;, input_type=Mock]\n    For further information visit https://errors.pydantic.dev/2.11/v/int_type", 'graceful_degradation': True}).packets_processed</failure></testcase><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_process_file_enhanced_mode_failure_fallback" time="0.001" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_process_file_basic_mode_with_masker" time="0.001" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_process_file_basic_mode_no_masker_bypass" time="0.001" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_mode_switching_during_runtime" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestEnhancedMaskStage" name="test_configuration_inheritance" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestMaskStageIntegration" name="test_compatibility_with_stage_base_interface" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestMaskStageIntegration" name="test_error_handling_in_initialization" time="0.000" /><testcase classname="tests.unit.test_enhanced_mask_stage.TestMaskStageIntegration" name="test_file_path_handling" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_encapsulation_statistics_collection" time="0.005" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_enhanced_tcp_session_key_fallback" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_enhanced_tcp_session_key_plain_packet" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_enhanced_tcp_session_key_vlan_packet" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_enhanced_tcp_session_key_without_adapter" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_error_handling_and_fallback" time="0.002" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_performance_logging_integration" time="0.009" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_process_pcap_data_enhanced_mixed_packets" time="0.002" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_process_pcap_data_enhanced_plain_packets" time="0.002" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_process_pcap_data_enhanced_vlan_packets" time="0.002" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_process_pcap_data_enhanced_without_adapter" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_tcp_session_consistency" time="0.002" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_tls_signaling_detection_compatibility" time="0.000" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_trim_packet_payload_functionality" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_trimming_step_initialization" time="0.001" /><testcase classname="tests.unit.test_enhanced_payload_trimming.TestEnhancedPayloadTrimming" name="test_trimming_step_process_file_with_encapsulation" time="0.007" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_keep_all" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_after_basic" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_after_empty_payload" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_after_full_keep" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_after_full_zero" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_after_invalid_params" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_range_basic" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_range_boundary" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_range_invalid_params" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestMaskSpec" name="test_mask_spec_factory_functions" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_add_entry_basic" time="0.001" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_add_mask_range_convenience" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_export_to_dict" time="0.001" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_finalize_and_merge" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_invalid_entry" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_lookup_basic" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_lookup_multiple" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestStreamMaskTable" name="test_statistics" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestTrimmerConfig" name="test_config_to_dict" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestTrimmerConfig" name="test_config_validation" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestTrimmerConfig" name="test_default_config" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_basic_lifecycle" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_error_and_warning_handling" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_failed_execution" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_stage_lifecycle" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_stage_management" time="0.000" /><testcase classname="tests.unit.test_enhanced_trim_core_models.TestExecutionResult" name="test_summary_and_report" time="0.000" /><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_fallback_configuration" time="0.008" /><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_tshark_unavailable" time="0.001" /><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_fallback_mode_determination" time="0.001"><failure message="AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;&#10; +  where &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE">tests/unit/test_fallback.py:61: in test_fallback_mode_determination
    assert mode == FallbackMode.MASK_STAGE
E   AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;
E    +  where &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE</failure></testcase><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_enhanced_trimmer_fallback" time="0.001" /><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_mask_stage_fallback" time="0.001" /><testcase classname="tests.unit.test_fallback.TestFallbackRobustness" name="test_comprehensive_robustness" time="0.964"><failure message="AssertionError: 健壮性验证未达到100%: 60.0%&#10;assert 60.0 == 100.0">tests/unit/test_fallback.py:154: in test_comprehensive_robustness
    assert robustness_rate == 100.0, f"健壮性验证未达到100%: {robustness_rate}%"
E   AssertionError: 健壮性验证未达到100%: 60.0%
E   assert 60.0 == 100.0</failure></testcase><testcase classname="tests.unit.test_fallback" name="test_phase1_day5_acceptance" time="0.001" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_fallback_configuration_validation" time="0.001" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_tshark_unavailable_detection" time="0.002" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_enhanced_trimmer_fallback_success" time="0.002" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_mask_stage_fallback_success" time="0.001" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_fallback_mode_determination_logic" time="0.001"><failure message="AssertionError: 错误上下文'协议解析失败'应该映射到FallbackMode.MASK_STAGE&#10;assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;">tests/unit/test_fallback_robustness.py:163: in test_fallback_mode_determination_logic
    assert mode == expected_mode, f"错误上下文'{error_context}'应该映射到{expected_mode}"
E   AssertionError: 错误上下文'协议解析失败'应该映射到FallbackMode.MASK_STAGE
E   assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;</failure></testcase><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_complete_fallback_workflow_integration" time="0.001"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_fallback_robustness.py:183: in test_complete_fallback_workflow_integration
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_all_fallback_processors_failure_handling" time="0.002"><failure message="AssertionError: assert '\u90fd\u5931\u8d25' in 'Primary processing pipeline and all fallback processors failed. Original error: primary_pipeline_failed'&#10; +  where 'Primary processing pipeline and all fallback processors failed. Original error: primary_pipeline_failed' = &lt;pktmask.core.processors.base_processor.ProcessorResult object at 0x13656ec40&gt;.error">tests/unit/test_fallback_robustness.py:220: in test_all_fallback_processors_failure_handling
    assert "都失败" in result.error
E   AssertionError: assert '\u90fd\u5931\u8d25' in 'Primary processing pipeline and all fallback processors failed. Original error: primary_pipeline_failed'
E    +  where 'Primary processing pipeline and all fallback processors failed. Original error: primary_pipeline_failed' = &lt;pktmask.core.processors.base_processor.ProcessorResult object at 0x13656ec40&gt;.error</failure></testcase><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_fallback_disabled_graceful_handling" time="0.001"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_fallback_robustness.py:238: in test_fallback_disabled_graceful_handling
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_resource_cleanup_robustness" time="0.002" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_statistics_accuracy_under_fallback" time="0.001" /><testcase classname="tests.unit.test_fallback_robustness.TestFallbackMechanismRobustness" name="test_error_boundary_validation" time="0.001"><failure message="Failed: 错误FileNotFoundError未被适当处理: 输入文件不存在">tests/unit/test_fallback_robustness.py:315: in test_error_boundary_validation
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:761: in process_file
    self.validate_inputs(input_path, output_path)
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1169: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1173: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1228: in _execute_mock_call
    raise effect
E   FileNotFoundError: 输入文件不存在

During handling of the above exception, another exception occurred:
tests/unit/test_fallback_robustness.py:320: in test_error_boundary_validation
    pytest.fail(f"错误{error.__class__.__name__}未被适当处理: {e}")
E   Failed: 错误FileNotFoundError未被适当处理: 输入文件不存在</failure></testcase><testcase classname="tests.unit.test_fallback_robustness.TestComprehensiveRobustnessValidation" name="test_100_percent_robustness_validation" time="0.596"><failure message="AssertionError: 健壮性验证未达到100%要求。实际: 80.0% (8/10)&#10;assert 80.0 == 100.0">tests/unit/test_fallback_robustness.py:358: in test_100_percent_robustness_validation
    assert robustness_percentage == 100.0, (
E   AssertionError: 健壮性验证未达到100%要求。实际: 80.0% (8/10)
E   assert 80.0 == 100.0</failure></testcase><testcase classname="tests.unit.test_fallback_robustness" name="test_phase1_day5_acceptance_criteria" time="0.001" /><testcase classname="tests.unit.test_infrastructure_basic.TestInfrastructureModule" name="test_infrastructure_module_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestInfrastructureModule" name="test_logging_module_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestInfrastructureModule" name="test_logger_creation" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestInfrastructureModule" name="test_error_handling_modules_exist" time="0.007" /><testcase classname="tests.unit.test_infrastructure_basic.TestLoggingBasic" name="test_log_performance_function_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestLoggingBasic" name="test_log_performance_call" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestDomainAdapters" name="test_domain_adapters_exist" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestDomainAdapters" name="test_event_adapter_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestDomainAdapters" name="test_statistics_adapter_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestUtilsAdvanced" name="test_file_selector_exists" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestUtilsAdvanced" name="test_file_selector_basic_functionality" time="0.001" /><testcase classname="tests.unit.test_infrastructure_basic.TestUtilsAdvanced" name="test_reporting_utils_exist" time="0.000" /><testcase classname="tests.unit.test_infrastructure_basic.TestUtilsAdvanced" name="test_path_utils_exist" time="0.000" /><testcase classname="tests.unit.test_main_module.TestMainModule" name="test_main_module_exists" time="0.001" /><testcase classname="tests.unit.test_main_module.TestMainModule" name="test_main_module_has_main_import" time="0.000" /><testcase classname="tests.unit.test_main_module.TestMainModule" name="test_main_module_import_structure" time="0.000"><failure message="AssertionError: assert 'PktMask \u4e3b\u7a0b\u5e8f\u5165\u53e3' in '\nPktMask main program entry point\n'&#10; +  where '\nPktMask main program entry point\n' = &lt;module 'pktmask.__main__' from '/Users/ricky/Downloads/PktMask/src/pktmask/__main__.py'&gt;.__doc__&#10; +    where &lt;module 'pktmask.__main__' from '/Users/ricky/Downloads/PktMask/src/pktmask/__main__.py'&gt; = &lt;module 'pktmask' from '/Users/ricky/Downloads/PktMask/src/pktmask/__init__.py'&gt;.__main__">tests/unit/test_main_module.py:35: in test_main_module_import_structure
    assert "PktMask 主程序入口" in pktmask.__main__.__doc__
E   AssertionError: assert 'PktMask \u4e3b\u7a0b\u5e8f\u5165\u53e3' in '\nPktMask main program entry point\n'
E    +  where '\nPktMask main program entry point\n' = &lt;module 'pktmask.__main__' from '/Users/ricky/Downloads/PktMask/src/pktmask/__main__.py'&gt;.__doc__
E    +    where &lt;module 'pktmask.__main__' from '/Users/ricky/Downloads/PktMask/src/pktmask/__main__.py'&gt; = &lt;module 'pktmask' from '/Users/ricky/Downloads/PktMask/src/pktmask/__init__.py'&gt;.__main__</failure></testcase><testcase classname="tests.unit.test_main_module.TestMainModule" name="test_main_module_structure" time="0.001" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_exists" time="0.001" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_has_docstring" time="0.000" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_has_all_attribute" time="0.000" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_all_is_empty" time="0.000" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_import_path" time="0.000" /><testcase classname="tests.unit.test_main_module.TestServicesModule" name="test_services_module_attributes" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleIntegration" name="test_main_module_can_import_gui" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleIntegration" name="test_services_module_ready_for_extension" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleIntegration" name="test_module_hierarchy_consistency" time="0.000" /><testcase classname="tests.unit.test_main_module.TestMainModuleExecutionModes" name="test_main_module_as_module" time="0.000" /><testcase classname="tests.unit.test_main_module.TestMainModuleExecutionModes" name="test_main_module_python_m_execution" time="0.000" /><testcase classname="tests.unit.test_main_module.TestMainModuleExecutionModes" name="test_main_module_file_structure" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleCoverage" name="test_main_module_execution_branch" time="0.001" /><testcase classname="tests.unit.test_main_module.TestModuleCoverage" name="test_services_module_all_export" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleCoverage" name="test_main_module_import_path_coverage" time="0.000" /><testcase classname="tests.unit.test_main_module.TestModuleCoverage" name="test_services_module_namespace_coverage" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_debug.TestMultiTLSRecordMaskingDebug" name="test_multi_tls_record_boundary_calculation" time="0.001" /><testcase classname="tests.unit.test_multi_tls_record_debug.TestMultiTLSRecordMaskingDebug" name="test_mask_overlap_detection" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_debug.TestMultiTLSRecordMaskingDebug" name="test_tls23_header_protection" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_debug.TestMultiTLSRecordMaskingDebug" name="test_length_calculation_consistency" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_debug.TestMultiTLSRecordMaskingDebug" name="test_real_world_scenario" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_mask_rule_absolute_offsets" time="0.001" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_mixed_tls_versions_multi_records" time="0.001" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_multi_tls_records_mask_rule_generation" time="0.001" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_overlapping_mask_detection" time="0.001" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_single_packet_multi_tls_records_parsing" time="0.000" /><testcase classname="tests.unit.test_multi_tls_record_masking.TestMultiTLSRecordMasking" name="test_three_tls_records_in_packet" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestStageContext" name="test_stage_context_creation" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestStageContext" name="test_temp_file_management" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestBaseStage" name="test_stage_initialization" time="0.000" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestBaseStage" name="test_stage_initialization_process" time="0.000" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestBaseStage" name="test_stage_progress_callback" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestBaseStage" name="test_stage_estimated_duration" time="0.002" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_executor_creation" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_stage_registration" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_successful_pipeline_execution" time="0.118" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_failed_pipeline_execution" time="0.214" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_empty_pipeline_execution" time="0.001" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_progress_tracking" time="0.002" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestMultiStageExecutor" name="test_execution_summary" time="0.002" /><testcase classname="tests.unit.test_phase1_2_multi_stage_executor.TestStageResultCollection" name="test_result_collection_operations" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_create_valid_entry" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_invalid_sequence_numbers" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_overlaps_with" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_contains_range" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_intersects_range" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_get_intersection" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestMaskEntry" name="test_get_description" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMatchResult" name="test_create_match_result" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMatchResult" name="test_no_match_result" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_create_table" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_add_entry" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_add_mask_range" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_add_entry_after_finalize" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_match_sequence_range_no_stream" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_match_sequence_range_basic" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_match_sequence_range_multiple_entries" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_lookup_masks" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_finalize_and_merge" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_merge_different_types_not_merged" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_get_stream_coverage" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_clear" time="0.001" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_get_statistics" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestSequenceMaskTable" name="test_export_to_dict" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestComplexScenarios" name="test_tcp_sequence_wraparound_scenario" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestComplexScenarios" name="test_tls_application_data_scenario" time="0.000" /><testcase classname="tests.unit.test_phase1_sequence_mask_table.TestComplexScenarios" name="test_multiple_streams_scenario" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestConnectionDirection" name="test_direction_values" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_create_valid_connection" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_invalid_ip_address" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_invalid_port_range" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_get_reverse" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_to_stream_base" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPConnection" name="test_ipv6_support" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDirectionalTCPStream" name="test_create_stream" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDirectionalTCPStream" name="test_stream_id_generation" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDirectionalTCPStream" name="test_initial_seq_management" time="0.001" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDirectionalTCPStream" name="test_sequence_number_conversion" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPStreamManager" name="test_create_manager" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPStreamManager" name="test_get_or_create_stream" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestTCPStreamManager" name="test_generate_stream_id" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDetectPacketDirection" name="test_forward_direction" time="0.000" /><testcase classname="tests.unit.test_phase1_tcp_stream.TestDetectPacketDirection" name="test_reverse_direction" time="0.000" /><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_1_tshark_unavailable_fallback_to_enhanced_trimmer" time="0.002"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_phase2_day11_fallback_robustness.py:88: in test_1_tshark_unavailable_fallback_to_enhanced_trimmer
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_2_protocol_parse_error_fallback_to_mask_stage" time="0.002"><failure message="AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;&#10; +  where &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE">tests/unit/test_phase2_day11_fallback_robustness.py:122: in test_2_protocol_parse_error_fallback_to_mask_stage
    assert fallback_mode == FallbackMode.MASK_STAGE
E   AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;
E    +  where &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_3_multi_level_fallback_cascade" time="0.002" /><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_4_fallback_statistics_accuracy" time="0.001"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_phase2_day11_fallback_robustness.py:185: in test_4_fallback_statistics_accuracy
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_5_resource_cleanup_robustness" time="0.002" /><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_6_fallback_disabled_graceful_handling" time="0.001"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_phase2_day11_fallback_robustness.py:227: in test_6_fallback_disabled_graceful_handling
    result = processor.process_file(str(self.test_input_file), str(self.test_output_file))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_7_concurrent_access_safety" time="0.002"><failure message="RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗">tests/unit/test_phase2_day11_fallback_robustness.py:251: in test_7_concurrent_access_safety
    results = [future.result() for future in futures]
               ^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/_base.py:449: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py:59: in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_phase2_day11_fallback_robustness.py:246: in process_file_wrapper
    return processor.process_file(str(self.test_input_file), str(self.test_output_file))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/processors/tshark_enhanced_mask_processor.py:765: in process_file
    raise RuntimeError(
E   RuntimeError: 核心组件不可用！强制协议适配模式要求所有核心组件必须可用。TShark分析器: ✗, 规则生成器: ✗, Scapy应用器: ✗</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_8_tshark_timeout_handling" time="0.002" /><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_9_complete_acceptance_test" time="0.001"><failure message="AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;&#10; +  where &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; = _determine_fallback_mode('\u534f\u8bae\u89e3\u6790\u5931\u8d25')&#10; +    where _determine_fallback_mode = &lt;pktmask.core.processors.tshark_enhanced_mask_processor.TSharkEnhancedMaskProcessor object at 0x1371b51d0&gt;._determine_fallback_mode&#10; +  and   &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE">tests/unit/test_phase2_day11_fallback_robustness.py:285: in test_9_complete_acceptance_test
    assert processor._determine_fallback_mode("协议解析失败") == FallbackMode.MASK_STAGE
E   AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;
E    +  where &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; = _determine_fallback_mode('\u534f\u8bae\u89e3\u6790\u5931\u8d25')
E    +    where _determine_fallback_mode = &lt;pktmask.core.processors.tshark_enhanced_mask_processor.TSharkEnhancedMaskProcessor object at 0x1371b51d0&gt;._determine_fallback_mode
E    +  and   &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness.TestPhase2Day11FallbackRobustness" name="test_10_final_validation_test" time="0.001"><failure message="AssertionError: 错误上下文'协议解析失败'应该映射到FallbackMode.MASK_STAGE&#10;assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;">tests/unit/test_phase2_day11_fallback_robustness.py:329: in test_10_final_validation_test
    assert mode == expected_mode, f"错误上下文'{error_context}'应该映射到{expected_mode}"
E   AssertionError: 错误上下文'协议解析失败'应该映射到FallbackMode.MASK_STAGE
E   assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;</failure></testcase><testcase classname="tests.unit.test_phase2_day11_fallback_robustness" name="test_phase2_day11_acceptance_criteria" time="0.001"><failure message="AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;&#10; +  where &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; = _determine_fallback_mode('\u534f\u8bae\u89e3\u6790\u5931\u8d25')&#10; +    where _determine_fallback_mode = &lt;pktmask.core.processors.tshark_enhanced_mask_processor.TSharkEnhancedMaskProcessor object at 0x1371b5b70&gt;._determine_fallback_mode&#10; +  and   &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE">tests/unit/test_phase2_day11_fallback_robustness.py:363: in test_phase2_day11_acceptance_criteria
    assert processor._determine_fallback_mode("协议解析失败") == FallbackMode.MASK_STAGE
E   AssertionError: assert &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; == &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt;
E    +  where &lt;FallbackMode.ENHANCED_TRIMMER: 'enhanced_trimmer'&gt; = _determine_fallback_mode('\u534f\u8bae\u89e3\u6790\u5931\u8d25')
E    +    where _determine_fallback_mode = &lt;pktmask.core.processors.tshark_enhanced_mask_processor.TSharkEnhancedMaskProcessor object at 0x1371b5b70&gt;._determine_fallback_mode
E    +  and   &lt;FallbackMode.MASK_STAGE: 'mask_stage'&gt; = FallbackMode.MASK_STAGE</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_initialization_with_sequence_support" time="0.001"><failure message="AssertionError: assert False&#10; +  where False = hasattr(&lt;src.pktmask.core.trim.stages.tcp_payload_masker_adapter.TcpPayloadMaskerAdapter object at 0x1364a74d0&gt;, '_stream_manager')&#10; +    where &lt;src.pktmask.core.trim.stages.tcp_payload_masker_adapter.TcpPayloadMaskerAdapter object at 0x1364a74d0&gt; = &lt;test_phase3_payload_masker_adapter.TestScapyRewriterPhase3 object at 0x1362a4cd0&gt;.rewriter">tests/unit/test_phase3_payload_masker_adapter.py:103: in test_initialization_with_sequence_support
    assert hasattr(self.rewriter, '_stream_manager')
E   AssertionError: assert False
E    +  where False = hasattr(&lt;src.pktmask.core.trim.stages.tcp_payload_masker_adapter.TcpPayloadMaskerAdapter object at 0x1364a74d0&gt;, '_stream_manager')
E    +    where &lt;src.pktmask.core.trim.stages.tcp_payload_masker_adapter.TcpPayloadMaskerAdapter object at 0x1364a74d0&gt; = &lt;test_phase3_payload_masker_adapter.TestScapyRewriterPhase3 object at 0x1362a4cd0&gt;.rewriter</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_validate_inputs_with_sequence_mask_table" time="0.001"><failure message="AttributeError: 'StageContext' object has no attribute 'masking_recipe'">tests/unit/test_phase3_payload_masker_adapter.py:119: in test_validate_inputs_with_sequence_mask_table
    assert self.rewriter.validate_inputs(self.test_context) is True
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/trim/stages/tcp_payload_masker_adapter.py:130: in validate_inputs
    if context.masking_recipe is None:
       ^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'StageContext' object has no attribute 'masking_recipe'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_directional_stream_id_generation" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_directional_stream_id'">tests/unit/test_phase3_payload_masker_adapter.py:144: in test_directional_stream_id_generation
    stream_id_1 = self.rewriter._generate_directional_stream_id(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_directional_stream_id'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_packet_direction_determination" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_determine_packet_direction'">tests/unit/test_phase3_payload_masker_adapter.py:163: in test_packet_direction_determination
    direction = self.rewriter._determine_packet_direction(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_determine_packet_direction'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_udp_stream_id_generation" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_udp_stream_id'">tests/unit/test_phase3_payload_masker_adapter.py:176: in test_udp_stream_id_generation
    stream_id = self.rewriter._generate_udp_stream_id(
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_udp_stream_id'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_sequence_based_mask_application" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_sequence_based_masks'">tests/unit/test_phase3_payload_masker_adapter.py:200: in test_sequence_based_mask_application
    modified_payload = self.rewriter._apply_sequence_based_masks(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_sequence_based_masks'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_mask_spec_to_range_application" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_mask_spec_to_range'">tests/unit/test_phase3_payload_masker_adapter.py:214: in test_mask_spec_to_range_application
    self.rewriter._apply_mask_spec_to_range(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_mask_spec_to_range'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_zero_mask_application" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_zero_mask'">tests/unit/test_phase3_payload_masker_adapter.py:247: in test_zero_mask_application
    self.rewriter._apply_zero_mask(payload, 6, 11)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_zero_mask'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_statistics_tracking" time="0.001"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_processing_stats'">tests/unit/test_phase3_payload_masker_adapter.py:266: in test_statistics_tracking
    stats = self.rewriter._generate_processing_stats()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_generate_processing_stats'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_mock_packet_processing" time="0.001"><failure message="AttributeError: 'StageContext' object has no attribute 'masking_recipe'">tests/unit/test_phase3_payload_masker_adapter.py:330: in test_mock_packet_processing
    assert self.rewriter.validate_inputs(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/trim/stages/tcp_payload_masker_adapter.py:130: in validate_inputs
    if context.masking_recipe is None:
       ^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'StageContext' object has no attribute 'masking_recipe'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestScapyRewriterPhase3" name="test_error_handling" time="0.001"><failure message="AttributeError: 'StageContext' object has no attribute 'masking_recipe'">tests/unit/test_phase3_payload_masker_adapter.py:348: in test_error_handling
    assert self.rewriter.validate_inputs(error_context) is False
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/pktmask/core/trim/stages/tcp_payload_masker_adapter.py:130: in validate_inputs
    if context.masking_recipe is None:
       ^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'StageContext' object has no attribute 'masking_recipe'</failure></testcase><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestSequenceMatchingIntegration" name="test_sequence_range_matching" time="0.001" /><testcase classname="tests.unit.test_phase3_payload_masker_adapter.TestSequenceMatchingIntegration" name="test_payload_modification_accuracy" time="0.000"><failure message="AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_sequence_based_masks'">tests/unit/test_phase3_payload_masker_adapter.py:431: in test_payload_modification_accuracy
    modified = self.rewriter._apply_sequence_based_masks(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'TcpPayloadMaskerAdapter' object has no attribute '_apply_sequence_based_masks'</failure></testcase><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_backward_compatibility" time="0.001" /><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_build_pipeline_config" time="0.001"><failure message="AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'">/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1423: in patched
    with self.decoration_helper(patched,
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'</failure></testcase><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_build_pipeline_config_with_mask" time="0.001"><failure message="AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'">/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1423: in patched
    with self.decoration_helper(patched,
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'</failure></testcase><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_directory_processing_logic" time="0.002"><failure message="AssertionError: &lt;PipelineEvents.PIPELINE_START: 1&gt; not found in ['PIPELINE_START', 'PipelineEvents.PIPELINE_START']">tests/unit/test_phase6_gui_migration.py:150: in test_directory_processing_logic
    self.assertIn(thread.progress_signal.emit.call_args_list[0][0][0],
E   AssertionError: &lt;PipelineEvents.PIPELINE_START: 1&gt; not found in ['PIPELINE_START', 'PipelineEvents.PIPELINE_START']</failure></testcase><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_gui_text_preservation" time="0.002" /><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_new_pipeline_thread_creation" time="0.001" /><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6GUIMigration" name="test_no_stages_selected" time="0.001"><failure message="AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'">/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1423: in patched
    with self.decoration_helper(patched,
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'</failure></testcase><testcase classname="tests.unit.test_phase6_gui_migration.TestPhase6Integration" name="test_end_to_end_config_flow" time="0.001"><failure message="AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'">/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1423: in patched
    with self.decoration_helper(patched,
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1405: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1497: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1467: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'pktmask.gui.managers.pipeline_manager' from '/Users/ricky/Downloads/PktMask/src/pktmask/gui/managers/pipeline_manager.py'&gt; does not have the attribute 'PipelineExecutor'</failure></testcase><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_adapter_initialization" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_adapter_initialize_method" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_adapter_initialize_with_runtime_config" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_failed_file_processing" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_get_required_tools_with_method" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_get_required_tools_without_method" time="0.000" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_processor_exception_handling" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_processor_initialization_failure" time="0.000" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_stop_with_method" time="0.001" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_stop_without_method" time="0.000" /><testcase classname="tests.unit.test_processor_stage_adapter.TestProcessorStageAdapter" name="test_successful_file_processing" time="0.001" /><testcase classname="tests.unit.test_steps_basic.TestStepsBasic" name="test_deduplication_step_properties" time="0.000" /><testcase classname="tests.unit.test_steps_basic.TestStepsBasic" name="test_ip_anonymization_step_properties" time="0.000" /><testcase classname="tests.unit.test_steps_basic.TestStepsBasic" name="test_trimming_step_properties" time="0.001" /><testcase classname="tests.unit.test_steps_basic.TestStepsBasic" name="test_all_steps_have_required_methods" time="0.000" /><testcase classname="tests.unit.test_steps_basic.TestStepsBasic" name="test_deduplication_empty_directory" time="0.001" /><testcase classname="tests.unit.test_strategy_comprehensive.TestAnonymizationStrategyAbstract" name="test_strategy_is_abstract" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestAnonymizationStrategyAbstract" name="test_abstract_methods_exist" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_ip_sort_key_ipv4" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_ip_sort_key_ipv6" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_ip_sort_key_invalid" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_safe_hash_deterministic" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_safe_hash_different_inputs" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_generate_unique_segment_basic" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_generate_unique_segment_avoids_conflicts" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_generate_unique_segment_invalid_input" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestUtilityFunctions" name="test_generate_unique_ipv6_segment_basic" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestIPv4AddressGeneration" name="test_generate_new_ipv4_address_hierarchical_basic" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestIPv4AddressGeneration" name="test_generate_new_ipv4_address_high_frequency_consistency" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestIPv4AddressGeneration" name="test_generate_new_ipv4_address_invalid_input" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestIPv6AddressGeneration" name="test_generate_new_ipv6_address_hierarchical_basic" time="0.032" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_strategy_initialization" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_strategy_reset" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_get_ip_map_empty" time="0.000" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_prescan_addresses_with_files" time="0.008" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_create_mapping_basic" time="0.003" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_build_mapping_from_directory" time="0.006" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_anonymize_packet_ipv4" time="0.001" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_anonymize_packet_no_mapping" time="0.001" /><testcase classname="tests.unit.test_strategy_comprehensive.TestHierarchicalAnonymizationStrategy" name="test_anonymize_packet_non_ip" time="0.001" /><testcase classname="tests.unit.test_strategy_comprehensive.TestStrategyIntegration" name="test_strategy_complete_workflow" time="0.007" /><testcase classname="tests.unit.test_tcp_bidirectional_fix.TestTCPBidirectionalFix" name="test_end_to_end_bidirectional_processing" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_mask_table'">tests/unit/test_tcp_bidirectional_fix.py:215: in test_end_to_end_bidirectional_processing
    mask_table = analyzer._generate_mask_table()
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_mask_table'</failure></testcase><testcase classname="tests.unit.test_tcp_bidirectional_fix.TestTCPBidirectionalFix" name="test_mask_table_separate_sequence_spaces" time="0.000"><failure message="TypeError: PacketAnalysis.__init__() got an unexpected keyword argument 'is_http_request'">tests/unit/test_tcp_bidirectional_fix.py:79: in test_mask_table_separate_sequence_spaces
    PacketAnalysis(
E   TypeError: PacketAnalysis.__init__() got an unexpected keyword argument 'is_http_request'</failure></testcase><testcase classname="tests.unit.test_tcp_bidirectional_fix.TestTCPBidirectionalFix" name="test_pyshark_analyzer_directional_stream_id_generation" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_stream_id'">tests/unit/test_tcp_bidirectional_fix.py:28: in test_pyshark_analyzer_directional_stream_id_generation
    stream_id_forward = self.analyzer._generate_stream_id(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_stream_id'</failure></testcase><testcase classname="tests.unit.test_tcp_bidirectional_fix.TestTCPBidirectionalFix" name="test_scapy_rewriter_directional_lookup" time="0.001" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase1DataStructures" name="test_tcp_stream_id_generation" time="0.002"><failure message="AssertionError: assert 'TCP_192.168.1.100:12345_10.0.0.1:443_reverse' == 'TCP_10.0.0.1:443_192.168.1.100:12345_reverse'&#10;  &#10;  #x1B[0m#x1B[91m- TCP_10.0.0.1:443_192.168.1.100:12345_reverse#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ TCP_192.168.1.100:12345_10.0.0.1:443_reverse#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">tests/unit/test_tcp_sequence_masking_validation_framework.py:70: in test_tcp_stream_id_generation
    assert reverse_stream.stream_id == expected_reverse_id
E   AssertionError: assert 'TCP_192.168.1.100:12345_10.0.0.1:443_reverse' == 'TCP_10.0.0.1:443_192.168.1.100:12345_reverse'
E     
E     #x1B[0m#x1B[91m- TCP_10.0.0.1:443_192.168.1.100:12345_reverse#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ TCP_192.168.1.100:12345_10.0.0.1:443_reverse#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase1DataStructures" name="test_mask_table_operations" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase1DataStructures" name="test_tcp_stream_manager" time="0.000"><failure message="TypeError: TCPStreamManager.get_or_create_stream() missing 3 required positional arguments: 'dst_ip', 'dst_port', and 'direction'">tests/unit/test_tcp_sequence_masking_validation_framework.py:116: in test_tcp_stream_manager
    forward_stream = manager.get_or_create_stream(connection, ConnectionDirection.FORWARD)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: TCPStreamManager.get_or_create_stream() missing 3 required positional arguments: 'dst_ip', 'dst_port', and 'direction'</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase2PySharkAnalyzer" name="test_tls_sample_analysis" time="0.000"><failure message="TypeError: StageContext.__init__() got an unexpected keyword argument 'mask_table_file'">tests/unit/test_tcp_sequence_masking_validation_framework.py:142: in test_tls_sample_analysis
    context = StageContext(
E   TypeError: StageContext.__init__() got an unexpected keyword argument 'mask_table_file'</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase2PySharkAnalyzer" name="test_tls_record_parsing" time="0.000"><failure message="TypeError: BaseStage.initialize() takes 1 positional argument but 2 were given">tests/unit/test_tcp_sequence_masking_validation_framework.py:188: in test_tls_record_parsing
    analyzer.initialize({})
E   TypeError: BaseStage.initialize() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase2PySharkAnalyzer" name="test_sequence_number_calculation" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase3ScapyRewriter" name="test_sequence_matching_accuracy" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase3ScapyRewriter" name="test_tls_sample_masking_preparation" time="0.000"><failure message="TypeError: BaseStage.initialize() takes 1 positional argument but 2 were given">tests/unit/test_tcp_sequence_masking_validation_framework.py:248: in test_tls_sample_masking_preparation
    rewriter.initialize({})
E   TypeError: BaseStage.initialize() takes 1 positional argument but 2 were given</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase3ScapyRewriter" name="test_mask_application_logic" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase4ProtocolStrategies" name="test_tls_strategy" time="0.000"><failure message="TypeError: TLSTrimStrategy.__init__() missing 1 required positional argument: 'config'">tests/unit/test_tcp_sequence_masking_validation_framework.py:274: in test_tls_strategy
    strategy = TLSTrimStrategy()
               ^^^^^^^^^^^^^^^^^
E   TypeError: TLSTrimStrategy.__init__() missing 1 required positional argument: 'config'</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase4ProtocolStrategies" name="test_http_strategy" time="0.000"><failure message="TypeError: HTTPMaskStrategy.__init__() missing 1 required positional argument: 'config'">tests/unit/test_tcp_sequence_masking_validation_framework.py:290: in test_http_strategy
    strategy = HTTPMaskStrategy()
               ^^^^^^^^^^^^^^^^^^
E   TypeError: HTTPMaskStrategy.__init__() missing 1 required positional argument: 'config'</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase4ProtocolStrategies" name="test_strategy_factory" time="0.000"><failure message="AssertionError: assert (False or False)&#10; +  where False = hasattr(&lt;src.pktmask.core.trim.strategies.factory.StrategyFactory object at 0x136318550&gt;, 'register')&#10; +  and   False = hasattr(&lt;src.pktmask.core.trim.strategies.factory.StrategyFactory object at 0x136318550&gt;, 'get_strategy')">tests/unit/test_tcp_sequence_masking_validation_framework.py:304: in test_strategy_factory
    assert hasattr(factory, 'register') or hasattr(factory, 'get_strategy')
E   AssertionError: assert (False or False)
E    +  where False = hasattr(&lt;src.pktmask.core.trim.strategies.factory.StrategyFactory object at 0x136318550&gt;, 'register')
E    +  and   False = hasattr(&lt;src.pktmask.core.trim.strategies.factory.StrategyFactory object at 0x136318550&gt;, 'get_strategy')</failure></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase5EndToEndIntegration" name="test_complete_tls_workflow" time="0.001" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase5EndToEndIntegration" name="test_performance_benchmarks" time="0.001" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestPhase5EndToEndIntegration" name="test_backward_compatibility" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestTLSSampleValidation" name="test_tls_sample_file_exists" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_framework.TestTLSSampleValidation" name="test_expected_packet_numbers" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_tls_sample_file_exists" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_expected_packet_numbers" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_basic_imports" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_sequence_mask_table_basic" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_tcp_stream_basic" time="0.000" /><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_validation_framework_readiness" time="0.000"><skipped type="pytest.skip" message="关键文件缺失: ['src/pktmask/core/trim/stages/scapy_rewriter.py']">/Users/ricky/Downloads/PktMask/tests/unit/test_tcp_sequence_masking_validation_simple.py:149: 关键文件缺失: ['src/pktmask/core/trim/stages/scapy_rewriter.py']</skipped></testcase><testcase classname="tests.unit.test_tcp_sequence_masking_validation_simple.TestTLSSampleValidationSimple" name="test_performance_baseline" time="0.000" /><testcase classname="tests.unit.test_tls23_marker_cli" name="test_parse_args_and_env_check" time="0.004"><failure message="TypeError: _mock_tshark_version.&lt;locals&gt;._run() missing 2 required positional arguments: 'text' and 'capture_output'">tests/unit/test_tls23_marker_cli.py:64: in test_parse_args_and_env_check
    tls23.main(argv)
src/pktmask/tools/tls23_marker.py:590: in main
    subprocess.run(editcap_cmd, check=True)
E   TypeError: _mock_tshark_version.&lt;locals&gt;._run() missing 2 required positional arguments: 'text' and 'capture_output'</failure></testcase><testcase classname="tests.unit.test_tls23_marker_cli" name="test_version_too_low" time="0.001" /><testcase classname="tests.unit.test_tls23_marker_phase3" name="test_phase3_supplements_missing_header" time="0.002"><failure message="TypeError: _mock_subprocess_for_phase3.&lt;locals&gt;._run() missing 2 required positional arguments: 'text' and 'capture_output'">tests/unit/test_tls23_marker_phase3.py:91: in test_phase3_supplements_missing_header
    tls23.main(argv)
src/pktmask/tools/tls23_marker.py:590: in main
    subprocess.run(editcap_cmd, check=True)
E   TypeError: _mock_subprocess_for_phase3.&lt;locals&gt;._run() missing 2 required positional arguments: 'text' and 'capture_output'</failure></testcase><testcase classname="tests.unit.test_tls23_marker_phase4" name="test_phase4_annotation" time="0.001" /><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_empty_or_missing_fields" time="0.000" /><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_logging_field_source_info" time="0.026"><failure message="AssertionError: debug('TLS记录0使用opaque_type (TLS 1.3): 23') call not found&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert ('TLS记录0使用opaque_type[0] (TLS 1.3): 23',) == ('TLS记录0使用opaque_type (TLS 1.3): 23',)&#10;  &#10;  At index 0 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mTLS记录0使用opaque_type[0] (TLS 1.3): 23#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mTLS记录0使用opaque_type (TLS 1.3): 23#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[90m #x1B[39;49;00m (#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'TLS记录0使用opaque_type (TLS 1.3): 23',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     'TLS记录0使用opaque_type[0] (TLS 1.3): 23',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  ?                         +++#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m )#x1B[90m#x1B[39;49;00m">/opt/homebrew/Cellar/python@3.13/3.13.3/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1050: in assert_any_call
    raise AssertionError(
E   AssertionError: debug('TLS记录0使用opaque_type (TLS 1.3): 23') call not found

During handling of the above exception, another exception occurred:
tests/unit/test_tls_13_opaque_type_fix.py:197: in test_logging_field_source_info
    mock_debug.assert_any_call("TLS记录0使用opaque_type (TLS 1.3): 23")
E   AssertionError: debug('TLS记录0使用opaque_type (TLS 1.3): 23') call not found
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ('TLS记录0使用opaque_type[0] (TLS 1.3): 23',) == ('TLS记录0使用opaque_type (TLS 1.3): 23',)
E     
E     At index 0 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mTLS记录0使用opaque_type[0] (TLS 1.3): 23#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mTLS记录0使用opaque_type (TLS 1.3): 23#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[90m #x1B[39;49;00m (#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'TLS记录0使用opaque_type (TLS 1.3): 23',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     'TLS记录0使用opaque_type[0] (TLS 1.3): 23',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     ?                         +++#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m )#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_mixed_tls_versions_in_stream" time="0.000" /><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_tls_12_content_type_parsing" time="0.000" /><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_tls_13_opaque_type_parsing" time="0.000" /><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_tls_13_priority_over_content_type" time="0.000"><failure message="AssertionError: 22 != 23">tests/unit/test_tls_13_opaque_type_fix.py:100: in test_tls_13_priority_over_content_type
    self.assertEqual(record.content_type, 23)  # 应该是opaque_type的值23，而不是content_type的值22
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: 22 != 23</failure></testcase><testcase classname="tests.unit.test_tls_13_opaque_type_fix.TestTLS13OpaqueTypeFix" name="test_tshark_command_includes_both_fields" time="0.001" /><testcase classname="tests.unit.test_tls_models.TestTLSProcessingStrategy" name="test_strategy_values" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSProcessingStrategy" name="test_strategy_count" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskAction" name="test_action_values" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskAction" name="test_action_count" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_valid_tls_record_creation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_invalid_content_type" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_negative_length" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_negative_offset" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_packet_not_in_spans" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_content_type_names" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_processing_strategies" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_cross_packet_detection" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSRecordInfo" name="test_version_strings" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_valid_mask_rule_creation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_negative_values_validation" time="0.000"><failure message="Failed: DID NOT RAISE &lt;class 'ValueError'&gt;">tests/unit/test_tls_models.py:287: in test_negative_values_validation
    with pytest.raises(ValueError, match="掩码长度不能为负数"):
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</failure></testcase><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_boundary_validation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_invalid_tls_record_type" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_absolute_positions" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_is_mask_operation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestMaskRule" name="test_description_generation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSAnalysisResult" name="test_analysis_result_creation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSAnalysisResult" name="test_tls_record_types_statistics" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSAnalysisResult" name="test_cross_packet_ratio" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSAnalysisResult" name="test_empty_records_ratio" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestTLSAnalysisResult" name="test_summary_generation" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_create_mask_rule_for_keep_all_record" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_create_mask_rule_for_application_data_complete" time="0.000"><failure message="AssertionError: assert 100 == 95&#10; +  where 100 = MaskRule(packet_number=1, tcp_stream_id='test_stream', tls_record_offset=0, tls_record_length=105, mask_offset=5, mask_length=100, action=&lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt;, reason='TLS-23 \u667a\u80fd\u63a9\u7801\uff1a\u4fdd\u7559\u5934\u90e8\uff0c\u63a9\u7801\u8f7d\u8377', tls_record_type=23).mask_length">tests/unit/test_tls_models.py:545: in test_create_mask_rule_for_application_data_complete
    assert rule.mask_length == 95  # 100 - 5
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 100 == 95
E    +  where 100 = MaskRule(packet_number=1, tcp_stream_id='test_stream', tls_record_offset=0, tls_record_length=105, mask_offset=5, mask_length=100, action=&lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt;, reason='TLS-23 \u667a\u80fd\u63a9\u7801\uff1a\u4fdd\u7559\u5934\u90e8\uff0c\u63a9\u7801\u8f7d\u8377', tls_record_type=23).mask_length</failure></testcase><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_create_mask_rule_for_application_data_incomplete" time="0.001"><failure message="AssertionError: assert 'TLS-23 不完整记录或纯头部：完全保留' == 'TLS-23 不完整记录或无消息体：完全保留'&#10;  &#10;  #x1B[0m#x1B[91m- TLS-23 不完整记录或无消息体：完全保留#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  ?              ^^^^#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ TLS-23 不完整记录或纯头部：完全保留#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  ?              ^^^#x1B[90m#x1B[39;49;00m">tests/unit/test_tls_models.py:568: in test_create_mask_rule_for_application_data_incomplete
    assert "TLS-23 不完整记录或纯头部：完全保留" == rule.reason
E   AssertionError: assert 'TLS-23 不完整记录或纯头部：完全保留' == 'TLS-23 不完整记录或无消息体：完全保留'
E     
E     #x1B[0m#x1B[91m- TLS-23 不完整记录或无消息体：完全保留#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     ?              ^^^^#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ TLS-23 不完整记录或纯头部：完全保留#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     ?              ^^^#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_create_mask_rule_for_application_data_header_only" time="0.000"><failure message="AssertionError: assert &lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt; == &lt;MaskAction.KEEP_ALL: 'keep_all'&gt;&#10; +  where &lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt; = MaskRule(packet_number=1, tcp_stream_id='test_stream', tls_record_offset=0, tls_record_length=10, mask_offset=5, mask_length=5, action=&lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt;, reason='TLS-23 \u667a\u80fd\u63a9\u7801\uff1a\u4fdd\u7559\u5934\u90e8\uff0c\u63a9\u7801\u8f7d\u8377', tls_record_type=23).action&#10; +  and   &lt;MaskAction.KEEP_ALL: 'keep_all'&gt; = MaskAction.KEEP_ALL">tests/unit/test_tls_models.py:585: in test_create_mask_rule_for_application_data_header_only
    assert rule.action == MaskAction.KEEP_ALL
E   AssertionError: assert &lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt; == &lt;MaskAction.KEEP_ALL: 'keep_all'&gt;
E    +  where &lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt; = MaskRule(packet_number=1, tcp_stream_id='test_stream', tls_record_offset=0, tls_record_length=10, mask_offset=5, mask_length=5, action=&lt;MaskAction.MASK_PAYLOAD: 'mask_payload'&gt;, reason='TLS-23 \u667a\u80fd\u63a9\u7801\uff1a\u4fdd\u7559\u5934\u90e8\uff0c\u63a9\u7801\u8f7d\u8377', tls_record_type=23).action
E    +  and   &lt;MaskAction.KEEP_ALL: 'keep_all'&gt; = MaskAction.KEEP_ALL</failure></testcase><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_validate_tls_record_boundary_valid" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_validate_tls_record_boundary_invalid" time="0.000" /><testcase classname="tests.unit.test_tls_models.TestUtilityFunctions" name="test_get_tls_processing_strategy" time="0.000" /><testcase classname="tests.unit.test_tls_reassembly_fix.TestTLSReassemblyFix" name="test_generate_masks_with_reassembly" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_tls_masks'">tests/unit/test_tls_reassembly_fix.py:127: in test_generate_masks_with_reassembly
    self.analyzer._generate_tls_masks(mask_table, stream_id, packets)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_generate_tls_masks'</failure></testcase><testcase classname="tests.unit.test_tls_reassembly_fix.TestTLSReassemblyFix" name="test_multiple_preceding_packets" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'">tests/unit/test_tls_reassembly_fix.py:247: in test_multiple_preceding_packets
    enhanced_packets = self.analyzer._reassemble_tls_stream(packets)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'</failure></testcase><testcase classname="tests.unit.test_tls_reassembly_fix.TestTLSReassemblyFix" name="test_non_contiguous_packets_not_reassembled" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'">tests/unit/test_tls_reassembly_fix.py:190: in test_non_contiguous_packets_not_reassembled
    enhanced_packets = self.analyzer._reassemble_tls_stream(packets)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'</failure></testcase><testcase classname="tests.unit.test_tls_reassembly_fix.TestTLSReassemblyFix" name="test_tls_handshake_across_tcp_segments" time="0.000"><failure message="AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'">tests/unit/test_tls_reassembly_fix.py:64: in test_tls_handshake_across_tcp_segments
    enhanced_packets = self.analyzer._reassemble_tls_stream(packets)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EnhancedPySharkAnalyzer' object has no attribute '_reassemble_tls_stream'</failure></testcase><testcase classname="tests.unit.test_tls_strategy.TestTLSTrimStrategy" name="test_strategy_properties" time="0.000" /><testcase classname="tests.unit.test_tls_strategy.TestTLSTrimStrategy" name="test_can_handle_valid_tls" time="0.000" /><testcase classname="tests.unit.test_tls_strategy.TestTLSTrimStrategy" name="test_empty_payload_analysis" time="0.000" /><testcase classname="tests.unit.test_tls_strategy.TestTLSTrimStrategy" name="test_client_hello_analysis" time="0.000" /><testcase classname="tests.unit.test_tls_strategy.TestTLSTrimStrategy" name="test_tls_version_string_conversion" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_init_default_config" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_init_custom_config" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_init_with_custom_paths_config" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_init_with_default_paths" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_find_tshark_executable_in_path" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_find_tshark_executable_custom_path" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_find_tshark_executable_in_config_paths" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_find_tshark_executable_not_found" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_tshark_version_success" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_tshark_version_failure" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_verify_tshark_capabilities_success" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_verify_tshark_capabilities_failure" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_initialization_success" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_initialization_no_tshark" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_validate_inputs_success" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_validate_inputs_no_input_file" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_validate_inputs_empty_input_file" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_validate_inputs_not_initialized" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_build_tshark_command_basic" time="0.001"><failure message="AssertionError: assert ['/usr/bin/tshark', '-r', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap', '-w', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-q'] == ['/usr/bin/tshark', '-r', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap', '-w', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-C', '1024', '-q']&#10;  &#10;  At index 13 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m-q#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m-C#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  Right contains 2 more items, first extra item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m1024#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[90m #x1B[39;49;00m [#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '/usr/bin/tshark',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-r',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-w',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     'tcp.desegment_tcp_streams:TRUE',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     'tcp.reassemble_out_of_order:TRUE',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     'ip.defragment:TRUE',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     'ipv6.defragment:TRUE',#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     '-C',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     '1024',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m     '-q',#x1B[90m#x1B[39;49;00m&#10;  #x1B[90m #x1B[39;49;00m ]#x1B[90m#x1B[39;49;00m">tests/unit/test_tshark_preprocessor.py:330: in test_build_tshark_command_basic
    assert cmd == expected_cmd
E   AssertionError: assert ['/usr/bin/tshark', '-r', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap', '-w', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-q'] == ['/usr/bin/tshark', '-r', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap', '-w', '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-C', '1024', '-q']
E     
E     At index 13 diff: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m-q#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m != #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m-C#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     Right contains 2 more items, first extra item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33m1024#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[90m #x1B[39;49;00m [#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '/usr/bin/tshark',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-r',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/input.pcap',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-w',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '/var/folders/wz/ql3l9vh10z3c4kt7h9c1ydvh0000gn/T/tmpkqlylajh/output.pcap',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     'tcp.desegment_tcp_streams:TRUE',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     'tcp.reassemble_out_of_order:TRUE',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     'ip.defragment:TRUE',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-o',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     'ipv6.defragment:TRUE',#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     '-C',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     '1024',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m     '-q',#x1B[90m#x1B[39;49;00m
E     #x1B[90m #x1B[39;49;00m ]#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_build_tshark_command_disabled_features" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_create_temp_file" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_parse_tshark_output_basic" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_verify_output_success" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_verify_output_no_file" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_verify_output_empty_file" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_execute_tshark_success" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_execute_tshark_failure" time="0.001"><failure message="assert True is False&#10; +  where True = &lt;src.pktmask.core.processors.base_processor.ProcessorResult object at 0x1371c3380&gt;.success">tests/unit/test_tshark_preprocessor.py:611: in test_execute_tshark_failure
    assert result.success is False
E   assert True is False
E    +  where True = &lt;src.pktmask.core.processors.base_processor.ProcessorResult object at 0x1371c3380&gt;.success</failure></testcase><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_execute_tshark_timeout" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_estimated_duration" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_estimated_duration_with_reassembly" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_estimated_duration_nonexistent_file" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_required_tools" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_check_tool_availability_available" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_check_tool_availability_unavailable" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_get_description" time="0.000" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_execute_full_pipeline_success" time="0.001"><failure message="AssertionError: assert 'TShark\u9884\u5904\u7406\u5b8c\u6210' in 'TShark\u9884\u5904\u7406\u5df2\u5c4f\u853d\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u59cb\u6587\u4ef6'">tests/unit/test_tshark_preprocessor.py:577: in test_execute_full_pipeline_success
    assert "TShark预处理完成" in result.data['message']
E   AssertionError: assert 'TShark\u9884\u5904\u7406\u5b8c\u6210' in 'TShark\u9884\u5904\u7406\u5df2\u5c4f\u853d\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u59cb\u6587\u4ef6'</failure></testcase><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_execute_validation_failure" time="0.001"><failure message="assert True is False&#10; +  where True = &lt;src.pktmask.core.processors.base_processor.ProcessorResult object at 0x136318550&gt;.success">tests/unit/test_tshark_preprocessor.py:589: in test_execute_validation_failure
    assert result.success is False
E   assert True is False
E    +  where True = &lt;src.pktmask.core.processors.base_processor.ProcessorResult object at 0x136318550&gt;.success</failure></testcase><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessor" name="test_update_stats" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessorIntegration" name="test_large_file_handling" time="0.001" /><testcase classname="tests.unit.test_tshark_preprocessor.TestTSharkPreprocessorIntegration" name="test_memory_limit_configuration" time="0.000"><failure message="AssertionError: assert '-C' in [None, '-r', 'input.pcap', '-w', 'output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-q']">tests/unit/test_tshark_preprocessor.py:716: in test_memory_limit_configuration
    assert '-C' in cmd
E   AssertionError: assert '-C' in [None, '-r', 'input.pcap', '-w', 'output.pcap', '-o', 'tcp.desegment_tcp_streams:TRUE', '-o', 'tcp.reassemble_out_of_order:TRUE', '-o', 'ip.defragment:TRUE', '-o', 'ipv6.defragment:TRUE', '-q']</failure></testcase><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_initialization_default_config" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_initialization_custom_config" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_find_tshark_executable_from_path" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_find_tshark_executable_not_found" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_get_tshark_version_success" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_get_tshark_version_failure" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_validate_tshark_version_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_validate_tshark_version_too_old" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_validate_tshark_version_none" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_verify_tshark_capabilities_success" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_verify_tshark_capabilities_no_tls" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_verify_tshark_capabilities_failure" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_check_dependencies_success" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_check_dependencies_failure" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_build_tshark_command_basic" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_build_tshark_command_with_options" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_execute_tshark_command_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_execute_tshark_command_empty_output" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_execute_tshark_command_failure" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_execute_tshark_command_timeout" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_int_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_int_hex" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_int_default" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_str_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_str_default" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_list_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_list_single_value" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_extract_field_list_empty" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_parse_packet_tls_records_single_record" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_parse_packet_tls_records_multiple_records" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_parse_packet_tls_records_unsupported_type" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_parse_tshark_output_success" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_parse_tshark_output_invalid_json" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_detect_cross_packet_records" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_get_analysis_result" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_analyze_file_dependency_failure" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzer" name="test_analyze_file_missing_file" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_platform_specific_path_detection" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_tshark_executable_finding_configured_paths" time="0.001"><failure message="AssertionError: assert '/usr/local/bin/tshark' == '/custom/tshark'&#10;  &#10;  #x1B[0m#x1B[91m- /custom/tshark#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ /usr/local/bin/tshark#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">tests/unit/test_tshark_tls_analyzer.py:649: in test_tshark_executable_finding_configured_paths
    assert result == '/custom/tshark'
E   AssertionError: assert '/usr/local/bin/tshark' == '/custom/tshark'
E     
E     #x1B[0m#x1B[91m- /custom/tshark#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ /usr/local/bin/tshark#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_tshark_executable_finding_custom_path" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_tshark_executable_finding_path_search" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_tshark_version_parsing_edge_cases" time="0.001" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_verify_tshark_capabilities_tcp_missing" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_verify_tshark_capabilities_protocol_check_failure" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_execute_tshark_command_timeout_scenario" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_execute_tshark_command_general_exception" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_parse_packet_tls_records_unsupported_types" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_parse_packet_tls_records_version_parsing_errors" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_parse_packet_tls_records_content_type_parsing_errors" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_extract_field_methods_edge_cases" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_detect_cross_packet_records_advanced_scenarios" time="0.000" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerCoverageGaps" name="test_get_analysis_result_comprehensive" time="0.000"><failure message="AttributeError: 'TestTSharkTLSAnalyzerCoverageGaps' object has no attribute 'config'">tests/unit/test_tshark_tls_analyzer.py:893: in test_get_analysis_result_comprehensive
    analyzer = TSharkTLSAnalyzer(self.config)
                                 ^^^^^^^^^^^
E   AttributeError: 'TestTSharkTLSAnalyzerCoverageGaps' object has no attribute 'config'</failure></testcase><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerPerformanceScenarios" name="test_large_dataset_handling" time="0.002" /><testcase classname="tests.unit.test_tshark_tls_analyzer.TestTSharkTLSAnalyzerPerformanceScenarios" name="test_verbose_logging_scenarios" time="0.000" /><testcase classname="tests.unit.test_utils.TestFileOps" name="test_file_ops_module_exists" time="0.000" /><testcase classname="tests.unit.test_utils.TestFileOps" name="test_file_ops_has_common_functions" time="0.000" /><testcase classname="tests.unit.test_utils.TestFileOps" name="test_ensure_directory_exists" time="0.000" /><testcase classname="tests.unit.test_utils.TestFileOps" name="test_get_file_size" time="0.000" /><testcase classname="tests.unit.test_utils.TestFileOps" name="test_copy_file" time="0.000" /><testcase classname="tests.unit.test_utils.TestStringOps" name="test_string_ops_module_exists" time="0.000" /><testcase classname="tests.unit.test_utils.TestStringOps" name="test_string_ops_has_common_functions" time="0.000" /><testcase classname="tests.unit.test_utils.TestStringOps" name="test_sanitize_filename" time="0.000" /><testcase classname="tests.unit.test_utils.TestStringOps" name="test_format_bytes" time="0.000" /><testcase classname="tests.unit.test_utils.TestStringOps" name="test_truncate_string" time="0.000" /><testcase classname="tests.unit.test_utils.TestMathOps" name="test_math_ops_module_exists" time="0.000" /><testcase classname="tests.unit.test_utils.TestMathOps" name="test_math_ops_has_common_functions" time="0.000" /><testcase classname="tests.unit.test_utils.TestMathOps" name="test_calculate_percentage" time="0.000" /><testcase classname="tests.unit.test_utils.TestMathOps" name="test_round_to_nearest" time="0.000" /><testcase classname="tests.unit.test_utils.TestMathOps" name="test_clamp_value" time="0.000" /><testcase classname="tests.unit.test_utils.TestTimeUtils" name="test_time_module_exists" time="0.000" /><testcase classname="tests.unit.test_utils.TestTimeUtils" name="test_time_has_common_functions" time="0.000" /><testcase classname="tests.unit.test_utils.TestTimeUtils" name="test_format_duration" time="0.000" /><testcase classname="tests.unit.test_utils.TestTimeUtils" name="test_get_timestamp" time="0.000" /><testcase classname="tests.unit.test_utils.TestTimeUtils" name="test_format_timestamp" time="0.000" /><testcase classname="tests.unit.test_utils.TestUtilsIntegration" name="test_all_utils_modules_importable" time="0.000" /><testcase classname="tests.unit.test_utils.TestUtilsIntegration" name="test_utils_functions_return_expected_types" time="0.000" /><testcase classname="tests.unit.test_utils.TestUtilsIntegration" name="test_utils_handle_edge_cases" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_ensure_directory_creates_new_directory" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_ensure_directory_existing_directory" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_ensure_directory_nested_path" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_ensure_directory_file_exists_raises_error" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_ensure_directory_no_create" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_safe_join" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_safe_join_with_empty_components" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_get_file_extension" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_get_file_base_name" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_get_file_size" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_get_file_size_non_existent_file" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_is_supported_file" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_find_files_by_extension" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_find_files_by_extension_recursive" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_find_pcap_files" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_copy_file_safely" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_copy_file_safely_no_overwrite" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_copy_file_safely_with_overwrite" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_delete_file_safely" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_delete_file_safely_non_existent" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_generate_output_filename" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestFileOpsComprehensive" name="test_get_directory_size" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_create_separator" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_ip_mapping" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_step_summary" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_deduplication_summary" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_trimming_summary" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_ip_mapping_list" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_ip_mapping_list_with_limit" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_ip_mapping_list_no_numbers" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_section_header" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_summary_section" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_file_status" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_truncate_string" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_pad_string" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_join_with_separator" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_key_value_pairs" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_clean_filename" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestStringOpsComprehensive" name="test_format_progress_text" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_calculate_percentage" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_calculate_rate" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_calculate_speed" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_safe_divide" time="0.001" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_format_number" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_format_size_bytes" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_calculate_statistics" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_format_processing_summary" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_clamp" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_normalize_value" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_moving_average" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestMathOpsComprehensive" name="test_calculate_growth_rate" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestTimeOpsComprehensive" name="test_format_duration" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestTimeOpsComprehensive" name="test_get_timestamp" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestTimeOpsComprehensive" name="test_format_timestamp" time="0.000" /><testcase classname="tests.unit.test_utils_comprehensive.TestTimeOpsComprehensive" name="test_sleep_with_callback" time="0.002" /></testsuite></testsuites>