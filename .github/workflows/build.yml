name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Build Windows Installer
      if: matrix.os == 'windows-latest'
      run: |
        pip install pyinstaller
        pyinstaller --name PktMask --windowed --onefile src/pktmask/main.py
        ls dist

    - name: Build macOS App
      if: matrix.os == 'macos-latest'
      run: |
        pip install pyinstaller
        pyinstaller --name PktMask --windowed --onefile src/pktmask/main.py
        ls dist

    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: PktMask-Windows
        path: dist/PktMask.exe

    - name: Upload macOS Artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: PktMask-macOS
        path: dist/PktMask

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: List artifacts
        run: ls -R ./artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 